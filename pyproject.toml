[tool.poetry]
authors = ["ZhengYu, Xu <zen-xu@outlook.com>"]
description = "More robust ray"
name = "sunray"
readme = "README.md"
version = "0.5.1" # version anchor
classifiers = [
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python            = "^3.9,<3.12"
ray               = { version = "^2.32", extras = ["default"], python = "^3.9" }
madbg             = "^1.3.2"
typing-extensions = "^4.5.0"
pdbr              = "^0.8.8"

[tool.poetry.group.test.dependencies]
deepdiff            = "^6.7.1"
importlib_metadata  = "6.7.0"
mypy                = { version = "^1.9", python = "^3.10" }
nox                 = "^2024.4.15"
pytest              = "<8.0"
pytest-cov          = "^4.1.0"
pytest-mypy-plugins = { version = "^3", python = "^3.10" }

[tool.poetry.scripts]
sunray = 'sunray.__main__:cli'

[tool.commitizen]
bump_message   = "chore(release): bump version $current_version -> $new_version"
pre_bump_hooks = ["./update-changelog.sh"]
version        = "0.5.1"                                                         # version anchor
version_files  = ["pyproject.toml:version anchor", "sunray/__init__.py"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires      = ["poetry-core"]

[tool.ruff]
extend-exclude = [
  "docs/*",
  # External to the project's coding standards
  "tests/**/fixtures/*",
]
fix = true
line-length = 88
target-version = "py39"

[tool.ruff.lint]
extend-select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "ERA", # flake8-eradicate/eradicate
  "I",   # isort
  "N",   # pep8-naming
  "PIE", # flake8-pie
  "PGH", # pygrep
  "RUF", # ruff checks
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
]
ignore = [
  "B904", # use 'raise ... from err'
  "B905", # use explicit 'strict=' parameter with 'zip()'
  "N818", # Exception name should be named with an Error suffix
]
unfixable = [
  "ERA", # do not auto remove commented out code
]

[tool.ruff.lint.isort]
force-single-line   = true
known-first-party   = ["sunray"]
lines-after-imports = 2
lines-between-types = 1
required-imports    = ["from __future__ import annotations"]

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
disable_error_code     = ["overload-overlap", "import-not-found", "import-untyped"]
explicit_package_bases = true
files                  = "sunray"
namespace_packages     = true
show_error_codes       = true
