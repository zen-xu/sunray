[tool.poetry]
name = "sunray"
version = "0.1.0b0"
description = ""
authors = ["ZhengYu, Xu <zen-xu@outlook.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.7,<4.0"

[tool.poetry.group.test.dependencies]
pytest = "^6.2.5"
pytest-cov = "^4.1.0"
deepdiff = "^6.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-exclude = [
    "docs/*",
    # External to the project's coding standards
    "tests/**/fixtures/*",
]
fix = true
line-length = 88
target-version = "py37"

[tool.ruff.lint]
unfixable = [
    "ERA", # do not auto remove commented out code
]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "B904", # use 'raise ... from err'
    "B905", # use explicit 'strict=' parameter with 'zip()'
    "N818", # Exception name should be named with an Error suffix
]

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["sunray"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.format]
docstring-code-format = true
